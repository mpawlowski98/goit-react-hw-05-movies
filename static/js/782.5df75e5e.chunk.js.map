{"version":3,"file":"static/js/782.5df75e5e.chunk.js","mappings":"4PAIMA,EAASC,EAAAA,GAAAA,GACTC,EAAUD,EAAAA,GAAAA,G,cCJhB,EAA4B,gC,SCKtBE,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IAqDrB,EAnDqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,EFLa,SAAyBH,GACtC,OAAwCI,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,uFACnBZ,EADmB,uBAEtBM,EAAgB,MAFM,iCAMxBE,GAAa,GANW,kBAQCK,EAAAA,EAAAA,IAAA,UAClBjB,EADkB,iBACFI,EADE,oBACiBN,EADjB,oBARD,OAWE,OAHlBoB,EARgB,QAWTC,OACXT,EAAgBQ,EAASE,MAEzBN,EAAS,iCAdW,kDAiBtBA,EAAS,KAAIO,SAjBS,QAmBxBT,GAAa,GAnBW,0DAAH,qDAsBvBI,GACD,GAAE,CAACZ,IAEG,CAAEK,aAAAA,EAAcE,UAAAA,EAAWE,MAAAA,EACnC,CE3B4CS,CAAiBlB,GAApDK,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,UAAWE,EAAjC,EAAiCA,MAE3BU,EAAc,SAAAC,GAClBlB,EAAS,WAAD,OAAYF,EAAZ,YAAuBoB,GAChC,EAED,OAAIb,GACK,gBAAKc,UAAWC,EAAhB,wBAGLb,GACK,iBAAKY,UAAWC,EAAhB,oBAAuCb,KAG3CJ,GAKH,iBAAKgB,UAAWC,EAAhB,WACE,4BACE,wBAAKjB,EAAakB,SAClB,gBACEC,IAAG,UAAKC,EAAAA,GAAAA,IAAL,OAA6BpB,EAAaqB,aAC7CC,IAAKtB,EAAakB,SAEpB,4BACE,0CAAkBlB,EAAauB,iBAC/B,sCAAcvB,EAAawB,aAC3B,0CAAkBxB,EAAayB,uBAGnC,4BACE,mBAAQC,QAAS,kBAAMZ,EAAY,OAAlB,EAAjB,mBACA,mBAAQY,QAAS,kBAAMZ,EAAY,UAAlB,EAAjB,yBAEF,0BACE,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACtC,EAAD,CAAMG,QAASA,OAC3C,SAAC,KAAD,CAAOkC,KAAK,UAAUC,SAAS,SAACpC,EAAD,CAASC,QAASA,iBAzBlD,gBAAKqB,UAAWC,EAAhB,4CA+BV,C","sources":["fetch/fetchMovieDetails.js","webpack://react-homework-template/./src/pages/movieDetails/MovieDetails.module.css?3b61","pages/movieDetails/MovieDetails.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport apiData from '../API/apiData.json';\n\nconst apiKey = apiData[0].apiKey;\nconst baseUrl = apiData[0].baseUrl;\n\nexport default function useMovieDetails(movieId) {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      if (!movieId) {\n        setMovieDetails(null);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `${baseUrl}movie/${movieId}?api_key=${apiKey}&language=en-US`\n        );\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        } else {\n          setError('Error fetching movie details.');\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__uHDv9\"};","import React, { lazy, Suspense } from 'react';\nimport useMoviesDetails from 'fetch/fetchMovieDetails';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport apiInfo from 'API/apiData.json';\nimport css from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('./cast/Cast'));\nconst Reviews = lazy(() => import('./reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const { movieDetails, isLoading, error } = useMoviesDetails(movieId);\n\n  const handleClick = view => {\n    navigate(`/movies/${movieId}/${view}`);\n  };\n\n  if (isLoading) {\n    return <div className={css.container}>Loading...</div>;\n  }\n\n  if (error) {\n    return <div className={css.container}>Error: {error}</div>;\n  }\n\n  if (!movieDetails) {\n    return <div className={css.container}>Select a movie to view details.</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <div>\n        <h1>{movieDetails.title}</h1>\n        <img\n          src={`${apiInfo[0].posterPath}${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n        />\n        <div>\n          <p>Release Date: {movieDetails.release_date}</p>\n          <p>Overview: {movieDetails.overview}</p>\n          <p>Vote Average: {movieDetails.vote_average}</p>\n        </div>\n      </div>\n      <div>\n        <button onClick={() => handleClick('cast')}>Cast</button>\n        <button onClick={() => handleClick('reviews')}>Reviews</button>\n      </div>\n      <div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["apiKey","apiData","baseUrl","Cast","lazy","Reviews","movieId","useParams","navigate","useNavigate","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","useEffect","fetchMovieDetails","axios","response","status","data","message","useMoviesDetails","handleClick","view","className","css","title","src","apiInfo","poster_path","alt","release_date","overview","vote_average","onClick","Suspense","fallback","path","element"],"sourceRoot":""}