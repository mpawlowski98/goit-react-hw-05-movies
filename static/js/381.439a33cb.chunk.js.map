{"version":3,"file":"static/js/381.439a33cb.chunk.js","mappings":"+PAIMA,EAASC,EAAAA,GAAAA,GACTC,EAAUD,EAAAA,GAAAA,GCJhB,MAAyB,wB,SCmCzB,EA/BgB,WACd,IACA,EFAa,SAAyBE,GACtC,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,uFACnBT,EADmB,uBAEtBG,EAAW,IAFW,iCAMxBE,GAAa,GANW,kBAQCK,EAAAA,EAAAA,IAAA,UAClBX,EADkB,iBACFC,EADE,4BACyBH,EADzB,2BARD,OAWE,OAHlBc,EARgB,QAWTC,OACXT,EAAWQ,EAASE,KAAKC,SAEzBP,EAAS,iCAdW,kDAiBtBA,EAAS,KAAIQ,SAjBS,QAmBxBV,GAAa,GAnBW,0DAAH,qDAsBvBI,GACD,GAAE,CAACT,IAEG,CAAEE,QAAAA,EAASE,UAAAA,EAAWE,MAAAA,EAC9B,CEhCuCG,EADlBO,EAAAA,EAAAA,MAAZhB,SACAE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,UAAWE,EAA5B,EAA4BA,MAE5B,OAAIF,GACK,wCAGLE,GACK,qCAAaA,KAGjBJ,GAA8B,IAAnBA,EAAQe,QAKtB,iCACE,eAAIC,UAAWC,EAAf,sBACA,wBACGjB,EAAQkB,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADC,UAPhB,6DAgBV,C","sources":["fetch/fetchMovieReviews.js","webpack://react-homework-template/./src/pages/movieDetails/reviews/Reviews.module.css?23e6","pages/movieDetails/reviews/Reviews.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport apiData from '../API/apiData.json';\n\nconst apiKey = apiData[0].apiKey;\nconst baseUrl = apiData[0].baseUrl;\n\nexport default function useMovieReviews(movieId) {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      if (!movieId) {\n        setReviews([]);\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\n          `${baseUrl}movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`\n        );\n        if (response.status === 200) {\n          setReviews(response.data.results);\n        } else {\n          setError('Error fetching movie reviews.');\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return { reviews, isLoading, error };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Reviews_header__ftAhl\"};","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchMovieReviews from 'fetch/fetchMovieReviews';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews, isLoading, error } = fetchMovieReviews(movieId);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!reviews || reviews.length === 0) {\n    return <div>No reviews found for this movie.</div>;\n  }\n\n  return (\n    <>\n      <h1 className={css.header}>Reviews</h1>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["apiKey","apiData","baseUrl","movieId","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchMovieReviews","axios","response","status","data","results","message","useParams","length","className","css","map","review","author","content","id"],"sourceRoot":""}